import asyncio
from aiogram import F, Router
from aiogram.filters import Command
from aiogram.types import Message
from app.vector_store import search_faq


router = Router()

@router.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø —ç—Ö–æ-–±–æ—Ç —Å –±–∞–∑–æ–π –∑–Ω–∞–Ω–∏–π –æ –∫–æ–º–ø–∞–Ω–∏–∏ <b>–ü–µ—Ä–≤—ã–π –ë–∏—Ç</b>.\n"
        "–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π —Å–æ–¥–µ—Ä–∂–∏—Ç –±–æ–ª–µ–µ <b>200 –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤</b> –æ –∫–æ–º–ø–∞–Ω–∏–∏.\n\n"
        "–Ø –º–æ–≥—É:\n"
        "‚Ä¢ –ü–æ–≤—Ç–æ—Ä—è—Ç—å –í–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è (—ç—Ö–æ-–æ—Ç–≤–µ—Ç)\n"
        "‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /faq &lt;–∑–∞–ø—Ä–æ—Å&gt;\n\n"
        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å /faq",
        parse_mode="HTML",
    )


@router.message(Command("help"))
async def cmd_start(message: Message):
    await message.answer(
        "–Ø –º–æ–≥—É:\n"
        "‚Ä¢ –ü–æ–≤—Ç–æ—Ä—è—Ç—å –í–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è (—ç—Ö–æ-–æ—Ç–≤–µ—Ç)\n"
        "‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /faq &lt;–∑–∞–ø—Ä–æ—Å&gt;\n\n"
        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å /faq",
        parse_mode="HTML",
    )


@router.message(Command("faq"))
async def cmd_faq(message: Message):
    """Handle /faq command."""
    parts: list[str] = message.text.split(maxsplit=1)
    query: str = parts[1].strip() if len(parts) > 1 else ""
    
    if not query:
        await message.answer(
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /faq <–∑–∞–ø—Ä–æ—Å>\n"
            "–ü—Ä–∏–º–µ—Ä: /faq –∫–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
        )
        return
    
    results: list[tuple[str, str]] = await asyncio.to_thread(search_faq, query)
    
    if not results:
        await message.answer(f"ü§∑ –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: {query}")
        return
    
    response = f"üìö –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –¥–ª—è: '{query}'\n\n"
    response += f"‚ùì –ü–æ—Ö–æ–∂–∏–π –≤–æ–ø—Ä–æ—Å: {results[0][0]}\n"
    response += f"üìù –û—Ç–≤–µ—Ç: {results[0][1]}"
    
    await message.answer(response)


@router.message(F.text)
async def echo_handler(message: Message):
    user_text = message.text
    await message.answer(
        f"–≠—Ö–æ: {user_text}"
    )
